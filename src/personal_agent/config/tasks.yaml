plan_meals:
  description: >
    Input is a simple inspiration text with food preferences or requests.
    Examples: "Want to eat noodles?", "Want one meal to eat fish?", "Want a tomato and eggs? Less sugar, less sauce."
    Create a 3-day meal plan (Breakfast, Lunch, Dinner; optional Snack).
    Rules: balanced, low oil/salt; reuse ingredients; respect preferences mentioned in inspiration;
    assume pantry staples (salt, sugar, soy sauce, vinegar, pepper, oil).
    Return plain text in EXACTLY this format:

    Day 1
    - Breakfast: <name> | Ingredients: <item qty, ...>
    - Lunch: ...
    - Dinner: ...
    - Snack (optional): ...

    Day 2
    ...

    Day 3
    ...
  expected_output: "Plain text 3-day meal plan in the format above."
  agent: recipe_planner
  inputs:
    inspiration: "${inspiration}"

build_grocery_list:
  description: >
    Read the meal plan text from plan_meals and build a shopping list.
    Group items by: Proteins / Staples / Vegetables / Fruits / Dairy / Other.
    Sum the same items across days; provide easy buy sizes
    (e.g., 'chicken breast ~400g (2 pieces)'); note optional/swappable items.
    Exclude pantry staples (salt, sugar, soy sauce, vinegar, pepper, oil).
    Return plain text in EXACTLY this format:

    Proteins
    - <item>: <total/size>
    ...

    Staples
    - <item>: <total/size>
    ...

    Vegetables
    - <item>: <total/size>
    ...

    Fruits
    - <item>: <total/size>
    ...

    Dairy
    - <item>: <total/size>
    ...

    Other
    - <item>: <total/size>
    ...

    Notes
    - Pantry staples not included.
    - Mention any simple swaps (e.g., banana â†’ berries).
  expected_output: "Plain text grouped shopping list with totals and notes."
  agent: grocery_list_builder
  depends_on:
    - plan_meals
  inputs:
    meal_plan: "${tasks.plan_meals.output}"
